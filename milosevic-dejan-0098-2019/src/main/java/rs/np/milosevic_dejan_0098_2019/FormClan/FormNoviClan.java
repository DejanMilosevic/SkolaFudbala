/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rs.np.milosevic_dejan_0098_2019.FormClan;

import rs.np.milosevic_dejan_0098_2019.domain.Clan;
import rs.np.milosevic_dejan_0098_2019.domain.Kategorija;
import rs.np.milosevic_dejan_0098_2019.domain.Pozicija;
import rs.np.milosevic_dejan_0098_2019.forme.MainForm;
import rs.np.milosevic_dejan_0098_2019.so.clan.SOAddClan;
import rs.np.milosevic_dejan_0098_2019.so.kategorija.SOGetAllKategorija;
import rs.np.milosevic_dejan_0098_2019.so.pozicija.SOGetAllPozicija;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.GroupLayout;
import javax.swing.JComboBox;

/**
 *
 * @author Dejan
 */
public class FormNoviClan extends javax.swing.JDialog {

    public FormNoviClan(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Unos clana");
        popuniKategorije();
        popuniPozicije();
    }

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        btnOtkazi = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtTelefon = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtDatumRodjenja = new javax.swing.JFormattedTextField();
        cmbKategorija = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setText("Ime:");

        txtIme.setText("Milan");
        txtIme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImeActionPerformed(evt);
            }
        });

        jLabel3.setText("Prezime:");

        txtPrezime.setText("Borjan");
        txtPrezime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrezimeActionPerformed(evt);
            }
        });

        btnOtkazi.setBackground(new java.awt.Color(102, 0, 102));
        btnOtkazi.setForeground(new java.awt.Color(255, 255, 255));
        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnDodaj.setBackground(new java.awt.Color(0, 0, 102));
        btnDodaj.setForeground(new java.awt.Color(255, 255, 255));
        btnDodaj.setText("Dodaj clana");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        jLabel8.setText("Email:");

        jLabel9.setText("Datum rodjenja:");

        txtEmail.setText("milan@gmail.com");
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtTelefon.setText("0621412467");
        txtTelefon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonActionPerformed(evt);
            }
        });

        jLabel10.setText("Telefon:");

        jLabel11.setText("Kategorija:");

        txtDatumRodjenja.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));
        txtDatumRodjenja.setText("10.11.1991");

        cmbKategorija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        
        lblPozicija = new JLabel("Pozicija:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(btnOtkazi, GroupLayout.PREFERRED_SIZE, 168, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
        					.addComponent(btnDodaj, GroupLayout.PREFERRED_SIZE, 166, GroupLayout.PREFERRED_SIZE)
        					.addContainerGap())
        				.addGroup(layout.createSequentialGroup()
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
        							.addComponent(jLabel2, Alignment.LEADING)
        							.addComponent(jLabel3, Alignment.LEADING)
        							.addComponent(jLabel8, Alignment.LEADING)
        							.addComponent(jLabel9, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        							.addComponent(jLabel10, Alignment.LEADING)
        							.addComponent(jLabel11, Alignment.LEADING))
        						.addComponent(lblPozicija, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(getCmbPozicija(), 0, 331, Short.MAX_VALUE)
        						.addComponent(txtTelefon, GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        						.addComponent(txtIme, GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        						.addComponent(txtPrezime, GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        						.addComponent(txtEmail, GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        						.addComponent(txtDatumRodjenja, GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
        						.addComponent(cmbKategorija, 0, 331, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(5)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel2)
        				.addComponent(txtIme, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(5)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtPrezime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel3))
        			.addGap(5)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel8))
        			.addGap(5)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel9)
        				.addComponent(txtDatumRodjenja, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel10)
        				.addComponent(txtTelefon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(5)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(cmbKategorija, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel11))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(getCmbPozicija(), GroupLayout.PREFERRED_SIZE, 21, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblPozicija))
        			.addPreferredGap(ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnOtkazi)
        				.addComponent(btnDodaj)))
        );
        getContentPane().setLayout(layout);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        try {
            if (txtIme.getText().isEmpty() || txtPrezime.getText().isEmpty()
                    || txtEmail.getText().isEmpty()
                    || txtTelefon.getText().isEmpty()
                    || txtDatumRodjenja.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
                return;
            }

            String ime = txtIme.getText();
            String prezime = txtPrezime.getText();
            String email = txtEmail.getText();
            String telefon = txtTelefon.getText();
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
            Date datumRodjenja = sdf.parse(txtDatumRodjenja.getText());
           
            Kategorija kategorija = (Kategorija) cmbKategorija.getSelectedItem();
            Pozicija pozicija = (Pozicija) cmbPozicija.getSelectedItem();

            Clan c = new Clan(null, ime, prezime, email, datumRodjenja, telefon, kategorija, pozicija);

            (new SOAddClan()).templateExecute(c);
            MainForm mf = (MainForm) getParent();
            mf.popuniKategorije();
            JOptionPane.showMessageDialog(this, "Sistem je kreirao novog clana.", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira novog clana: " + ex.getMessage(), "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void txtPrezimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrezimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrezimeActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtTelefonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonActionPerformed

    private void txtImeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JComboBox cmbKategorija;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JFormattedTextField txtDatumRodjenja;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtTelefon;
    private JLabel lblPozicija;
    private JComboBox cmbPozicija;
    // End of variables declaration//GEN-END:variables

    private void popuniKategorije() {

        try {
        	SOGetAllKategorija so = new SOGetAllKategorija();
            so.templateExecute(new Kategorija());
            
            ArrayList<Kategorija> kategorije = so.getLista();

            cmbKategorija.removeAllItems();

            for (Kategorija kategorija : kategorije) {
                cmbKategorija.addItem(kategorija);
            }

        } catch (Exception ex) {
            Logger.getLogger(FormNoviClan.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
	private JComboBox getCmbPozicija() {
		if (cmbPozicija == null) {
			cmbPozicija = new JComboBox();
		}
		return cmbPozicija;
	}


    public void popuniPozicije() {
    	try {
        	SOGetAllPozicija so = new SOGetAllPozicija();
            so.templateExecute(new Pozicija());
            
            ArrayList<Pozicija> pozicije = so.getLista();

            cmbPozicija.removeAllItems();

            for (Pozicija pozicija:pozicije) {
                cmbPozicija.addItem(pozicija);
            }

        } catch (Exception ex) {
            Logger.getLogger(FormNoviClan.class.getName()).log(Level.SEVERE, null, ex);
        }
	}
}
